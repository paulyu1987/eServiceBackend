//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cendyn.eConcierge.Data
{
    using System;
    using System.Configuration;
    using System.Data.Entity;
    using System.Data.Entity.Core.EntityClient;
    using System.Data.Entity.Infrastructure;
    using Cendyn.eConcierge.Core.EntityFrameworkRepository.Interfaces;
    
    public partial class CendynAdminEntities : DbContext, IDbContext
    {
    //In order to reuse connection string for other setting, so we customized the template
    	//We populate EF connection string in class
    	public CendynAdminEntities(string connectionString)
    		: base(connectionString)
    	{
    	}
    	private static string _connectionString;
        public static string ConnectionString
        {
            get
            {
                if (_connectionString == null)
                {
                    string baseConnectionString = ConfigurationManager.ConnectionStrings["CendynAdminEntities"].ConnectionString;
     
                    var entityBuilder = new EntityConnectionStringBuilder
                    {
                        Provider = "System.Data.SqlClient",
                        ProviderConnectionString = baseConnectionString,
                        Metadata =
                            String.Format(@"res://*/{0}.csdl|res://*/{0}.ssdl|res://*/{0}.msl","CendynAdmin")
                    };
     
                    _connectionString = entityBuilder.ToString();
                }
                return _connectionString;
            }
        }
        public CendynAdminEntities()
            : base(ConnectionString)
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<eConcierge_Company> eConcierge_Company { get; set; }
        public virtual DbSet<eUpgrade_Company> eUpgrade_Company { get; set; }
    }
}
